<?xml version="1.0" encoding="UTF-8"?>
<project name="site1" basedir="../" default="help">
    <property file="build/default.properties" />
    <if>
        <isset property="build.env" />
        <then>
            <echo message="Overwriting default.properties with ${build.env}.properties" />
            <property file="build/${build.env}.properties" override="true" />
        </then>
    </if>

    <target name="help" description="echo">
    </target>

    <target name="config" description="Replace config files">
        <copy todir="${project.basedir}" overwrite="true">
            <fileset dir="${project.basedir}">
                <include pattern="protected/**/*.php.mustache" />
                <include pattern="build/**/*.php.mustache" />
                <include pattern="*.php.mustache" />
            </fileset>
            <mapper type="glob" from="*.php.mustache" to="*.php" />
            <filterchain>
                <filterreader classpath="build/filters" classname="MustacheRender" />
            </filterchain>
        </copy>
        <copy todir="${project.basedir}" overwrite="true">
            <fileset dir="${project.basedir}">
                <include pattern="build/*.js.mustache" />
            </fileset>
            <mapper type="glob" from="*.js.mustache" to="*.js" />
            <filterchain>
                <filterreader classpath="build/filters" classname="MustacheRender" />
            </filterchain>
        </copy>
    </target>

    <target name="product" description="get product site">
        <if>
            <isset property="product.dir" />
            <then>
                <mkdir dir="${product.dir}" />
            </then>
            <else>
                <property name="product.dir" value="../product_site" />
                <mkdir dir="${product.dir}" />
            </else>
        </if>
        <copy todir="${product.dir}" overwrite="true">
            <fileset dir="${project.basedir}">
                <include pattern="protected/**" />
                <include pattern="img/**" />
                <include pattern="images/**" />
                <include pattern="script/**" />
                <include pattern="vendor/*.*" />
                <include pattern="vendor/yiisoft/**" />
                <include pattern="zh_cn/**" />
                <include pattern="assets/**" />
                <include pattern="index.php" />
            </fileset>
        </copy>
        <!-- 删除所有mustache文件 -->
        <delete>
            <fileset dir="${product.dir}">
                <include name="**/*.mustache" />
            </fileset>
        </delete>
    </target>

    <target name="db-init" depends="config" description="Initiate database">
        <pdosqlexec url="mysql:host=${db.host};port=${db.port}" userid="${db.user}" password="${db.passwd}">
            CREATE DATABASE IF NOT EXISTS ${db.name};
        </pdosqlexec>
        <pdosqlexec url="mysql:host=${db.host};port={db.port};dbname=${db.name}" userid="${db.user}" password="${db.passwd}" src="${project.basedir}/protected/data/init.sql">
        </pdosqlexec>
    </target>

    <target name="db-migrate" depends="db-init" description="Migrate database">
        <exec command="./yiic migrate --interactive=0" dir="${project.basedir}/protected/" />
    </target>

    <target name="message" depends="config" description="generate messages">
        <exec command="./yiic message ./messages/config.php" dir="${project.basedir}/protected/" />
    </target>

    <target name='eol' description="Replace all windows eol to unix eol">
        <reflexive>
            <fileset dir="${project.basedir}">
                <include pattern="*.(js|css|html|mustache|php)" />
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="\r(\n)" replace="\1" />
                </replaceregexp>
            </filterchain>
        </reflexive>
    </target>

    <target name="deploy" depends="config" description="Deploy code">
        <if>
            <isset property="deploy.servers" />
            <then>
                <foreach list="${deploy.servers}" param="server" target="deployTo" />
            </then>
        </if>
    </target>

    <taskdef name="filesync" classname="phing.tasks.ext.FileSyncTask" />
    <target name="deployTo">
        <echo message="Deploy code to ${server}:${deploy.dir}" />
        <if>
            <or>
                <equals arg1="${server}" arg2="127.0.0.1" />
                <equals arg1="${server}" arg2="localhost" />
            </or>
            <then>
                <property name="destination" value="${deploy.dir}" />
            </then>
            <else>
                <property name="destination" value="${deploy.user}@${server}:${deploy.dir}" />
            </else>
        </if>
        <filesync
            sourceDir="${project.basedir}/"
            destinationDir="${destination}"
            options='-avz'
            delete="true"
            />
    </target>

    <target name="translate" description="translate" depends="config,coffee,sass">
        <exec dir="protected" command="php ../build/translate.php" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
    </target>

    <target name="generateJsFiles" description="generate js files" depends="translate">
        <exec dir="protected" command="node ../build/generateJsFiles.js" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
    </target>

     <target name="compressJsCss" description="compress js and css" depends="generateJsFiles">
        <exec dir="protected" command="php ../build/compressJsCss.php" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
    </target>

    <target name="setCacheCode" description="set cache code" depends="compressJsCss">
        <exec dir="protected" command="php ../build/setCacheCode.php" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
    </target>


    <target name="go" description="start" depends="setCacheCode,removeAssets">
    </target>

    <target name="removeAssets" description="remove assets" depends="">
        <exec dir="protected" command="rm -rf ../assets/*" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
    </target>

    <target name="coffee" description="generete site and admin js" depends="">
        <exec dir="protected" command="coffee --output modules/admin/script/js/  --compile ../coffee/admin/js/" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
        <exec dir="protected" command="coffee --output ../js/  --compile ../coffee/site/js/" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
        <exec dir="protected" command="coffee --output ../dev/js/  --compile ../coffee/site/dev/" outputProperty="msg.out"/>
        <echo msg="message: ${msg.out}" />
    </target>

    <target name="sass" description="generete site and admin css" depends="">
        <exec dir="protected" command="sass --style compressed ../sass/site/base.scss ../css/base.css" outputProperty="msg.out"/>
        <echo msg="message of site base.css :${msg.out}" />
        <exec dir="protected" command="sass --style compressed ../sass/site/page.scss ../css/page.css" outputProperty="msg.out"/>
        <echo msg="message of site page.css :${msg.out}" />
        <exec dir="protected" command="sass --style compressed ../sass/admin/base.scss modules/admin/script/css/base.css" outputProperty="msg.out"/>
        <echo msg="message of admin base.css :${msg.out}" />
        <exec dir="protected" command="sass --style compressed ../sass/admin/page.scss modules/admin/script/css/page.css" outputProperty="msg.out"/>
        <echo msg="message of admin page.css :${msg.out}" />
    </target>
</project>
